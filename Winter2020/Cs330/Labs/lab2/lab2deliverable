Script started on Fri 17 Jan 2020 03:56:04 PM CST
a049849[22]% make clean
rm -f *.o demo
a049849[23]% make
gcc -c -ggdb main.c
gcc -c -ggdb functions.c
gcc main.o functions.o -o demo
a049849[24]% make clean[14Gexec /home/hercules/s/sharma3v/cs330/lab2/2020/demo[16Git[Kls[Krm -r BAK[14Gcd good[K..[K[14Gls ../ugly/[14G[7@cp -r BAK[32G[14G[7Pls[25G[14Gcd ..[Kgood[14Grm -r BAK[14Gls[Kexitec /home/hercules/s/sharma3v/cs330/lab2/2020/demo[14Gmake clean[K[18G[K[Kvalgrind --leak-ckec[K[K[Kheck=yes dm[Kemo
==8291== Memcheck, a memory error detector
==8291== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8291== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==8291== Command: demo
==8291== 
How big is the array?50
min value in array is: 481
==8291== 
==8291== HEAP SUMMARY:
==8291==     in use at exit: 0 bytes in 0 blocks
==8291==   total heap usage: 1 allocs, 1 frees, 200 bytes allocated
==8291== 
==8291== All heap blocks were freed -- no leaks are possible
==8291== 
==8291== For counts of detected and suppressed errors, rerun with: -v
==8291== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
a049849[25]% gdb demo
[?1034hGNU gdb (GDB) Red Hat Enterprise Linux 7.6.1-115.el7
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /home/hercules/s/sharma3v/cs330/lab2/2020/demo...done.
(gdb) gd[K[Kbreak funcr[Ktions.c: findAndReturnMin
Breakpoint 1 at 0x4008ff: file functions.c, line 44.
(gdb) run
Starting program: /home/hercules/s/sharma3v/cs330/lab2/2020/demo 
How big is the array?50

Breakpoint 1, findAndReturnMin (array=0x602010, length=50, min=0x7fffffffdf84) at functions.c:44
44	    *min = array [0];
(gdb) print array[][K0]@length
$1 = {78, 212, 88, 240, 97, 421, 169, 311, 242, 145, 66, 83, 28, 373, 368, 181, 145, 57, 455, 
  23, 179, 261, 316, 261, 294, 227, 271, 104, 404, 92, 44, 481, 304, 484, 72, 252, 404, 240, 62, 
  145, 384, 127, 80, 264, 351, 447, 444, 347, 356, 250}
(gdb) print *mon[K[Kin
$2 = 9999
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) next
47	        if (*min < array [i])
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) next
47	        if (*min < array [i])
(gdb) next
49	            *min = array [i];
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) next
47	        if (*min < array [i])
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) netx[K[Kxt
47	        if (*min < array [i])
(gdb) next
49	            *min = array [i];
(gdb) next
45	    for (i = 0; i < length; i ++)
(gdb) nexy
Undefined command: "nexy".  Try "help".
(gdb) next
47	        if (*min < array [i])
(gdb) next[K[K[K[Kprint *min
$3 = 240
(gdb) untill 
Undefined command: "untill".  Try "help".
(gdb) until
45	    for (i = 0; i < length; i ++)
(gdb) 
53	    return 0;
(gdb) next
54	}
(gdb) next
main (argc=1, argv=0x7fffffffe078) at main.c:28
28	    printf ("min value in array is: %d\n", min);
(gdb) next
min value in array is: 484
29	    free(array);
(gdb) next
30	    exit (0);
(gdb) next
[Inferior 1 (process 8303) exited normally]
(gdb) quit
a049849[26]% exit
exit

Script done on Fri 17 Jan 2020 04:00:32 PM CST
