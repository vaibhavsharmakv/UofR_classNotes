 M = 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111,

As you have not specified the value of K, i am assuming,

2. K = 133457799BBCDFF1 (In Hexa-decimal).

3. K = 00010011 00110100 01010111 01111001 10011011 10111100 11011111 11110001 (In binary)

Left part and Right part are as follows:

4. L = 0000 0001 0010 0011 0100 0101 0110 0111

5. R = 1000 1001 1010 1011 1100 1101 1110 1111

To derive k1, The below table PC-1 will be used:

PC-1 7 49 41 33 25 17 9 1 58 50 42 3426 18 10 259 5143 35 27 19 11 3 6 524-4 63 55 47 39 31 23 15 7 62 54 46 3830 22 14 6 61

The first entry in the table is 57, so the 57th bit of K becomes 1st bit of Round 1 subkey, i.e. k1.

Next, 49th bit of K becomes 2nd bit of k1. This will be repeated for all the entries in the table.

As you can see, the last element in table is 4. So, the 4th bit of original key is the last bit of k1.

Now,

K1 = 1111000 0110011 0010101 0101111 0101010 1011001 1001111 0001111

Next, splitting this into L(0) and R(0),

C(0) = 1111000 0110011 0010101 0101111

D(0) =  0101010 1011001 1001111 0001111

The below is the Initial permuatation IP of 64bit message data M.

IP 58 50 42 34 26 18 10 2 60 52 44 36 28 20 12 4 62 54 46 38 30 22 14 6 64 56 48 40 32 24 16 8 7 49 43325 17 9 1 59 51 43 35

After applying IP to the bloack of M, we get

M = 0000 0001 0010 0011 0100 0101 0110 0111 1000 1001 1010 1011 1100 1101 1110 1111
IP = 1100 1100 0000 0000 1100 1100 1111 1111 1111 0000 1010 1010 1111 0000 1010 1010

here, 58th bit of message M is 1, which will be the 1st bit of IP. next, 50th bit of M is 1, which becomes 2nd bit of IP.

the 7th bit of m is 0, which becomes the last bit of IP.

After dividing IP into L(0) and R(0):

L0 = 1100 1100 0000 0000 1100 1100 1111 1111
R0 = 1111 0000 1010 1010 1111 0000 1010 1010

Next, To calculate E(R(0)) from R(0), we use below table (E-bit selection table)

E BIT-SELECTION TABLE 32 1 2 345 4 5 6 789 8 9 1011 12 13 12 13 14 1516 17 16 17 18 19 20 21 20 21 22 2324 25 24 25 26 2728 2

32th bit of R(0) will be the 1st bit of E(R(0)). next 1st bit of R(0) will be the 2nd bit of E(R(0)) and so on.

R0 = 1111 0000 1010 1010 1111 0000 1010 1010
Finally,

E(R0) = 011110 100001 010101 010101 011110 100001 010101 010101

To calculate A, we perform E[R0] (+) K1.

K1 = 000110 110000 001011 101111 111111 000111 000001 110010
E(R0) = 011110 100001 010101 010101 011110 100001 010101 010101
A= K1+E(R0) = 011000 010001 011110 111010 100001 100110 010100 100111.

Next, group A into set of 6bits and after evaluating it with s-box substitutions, the 8 S-boxes are generated:

S1(B1)S2(B2)S3(B3)S4(B4)S5(B5)S6(B6)S7(B7)S8(B8) = 0101 1100 1000 0010 1011 0101 1001 0111

From, these 8 S boxes,

we get, f = 0010 0011 0100 1010 1010 1001 1011 1011

next, R1= L(0) + f(R(0) , K1)

= 1100 1100 0000 0000 1100 1100 1111 1111
+ 0010 0011 0100 1010 1010 1001 1011 1011
= 1110 1111 0100 1010 0110 0101 0100 0100

Next round, we will have L(2) = R(1), the one which we just calculated.

Then, we need to calculate R2, R3 and so on. After 16 Rounds, we have the blocks L(16) and R(16).

Reverese the order to generate 64-bit block.

R(16)L(16)

and finally apply permutation IP-1 from following table:



Example: If we process all 16 blocks using the method defined previously, we get, on the 16th round, „Åó16-0100 0011 0100 0010

